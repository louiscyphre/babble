!function(e,t,s,n,a,o,r){"use strict"
e.Babble={counter:0,apiUrl:"http://localhost:9000/",messages:[],myMessagesIds:[],stats:{users:0,messages:0},storage:n,poll:function t(n,o){var r=new a
r.onload=function(){r.status>=200&&r.status<400?(s.log("Poll response from server:",r.responseText),""!==r.responseText&&o(JSON.parse(r.responseText)),t(n,o)):s.log("Server error")},r.onerror=function(){s.log("Network error")}
var l
l="messages?counter="===n?e.Babble.apiUrl+n+e.Babble.counter.toString():e.Babble.apiUrl+n,r.open("GET",l,!0),r.setRequestHeader("Content-Type","text/plain"),s.log("poll URL:",l),r.send()},register:function(t){e.Babble.updateKey("userInfo",t),e.Babble.request("POST","login",t).then(function(t){e.Babble.getMessages(e.Babble.counter,e.Babble.storeMessages)}).catch(function(e){s.log(e)})},postMessage:function(t,n){n({id:"42"}),e.Babble.updateKey("currentMessage",t.message),e.Babble.request("POST","messages",t).then(function(e){n(e)}).catch(function(e){s.log(e)})},getMessages:function(t,s){s([]),e.Babble.poll("messages?counter=",s)},deleteMessage:function(t,n){n&&n(!0)
var a="messages/"+t.toString()
e.Babble.request("DELETE",a).then(function(e){n(e)}).catch(function(e){s.log(e)})},getStats:function(t){t({users:5,messages:20}),e.Babble.poll("stats",t)},request:function(t,n,r){return new o(function(o,l){var u=new a
u.onload=function(){u.status>=200&&u.status<400?o(JSON.parse(u.responseText)):(s.log("Server error"),l(JSON.parse(u.responseText)))},u.onerror=function(){s.log("Network error")},u.open(t,e.Babble.apiUrl+n,!0),u.setRequestHeader("Content-Type","text/plain"),s.log("request: URL:",e.Babble.apiUrl+n),"POST"===t?(s.log("POSTing: ",JSON.stringify(r)),u.send(JSON.stringify(r))):u.send()})},storeMessages:function(t){e.Babble.messages=e.Babble.messages.concat(t),e.Babble.counter=e.Babble.messages.length,s.log("Messages on client:",e.Babble.messages)},updateStats:function(e){},updateDeletedCounter:function(t){!0===t&&e.Babble.deletedCounter++},storeId:function(e){},updateKey:function(t,s){if("all"===t)return void e.Babble.storage.setItem("babble",JSON.stringify({currentMessage:s,userInfo:{name:s,email:s}}))
var n=JSON.parse(e.Babble.storage.getItem("babble"))
if("userInfo"===t)return n.userInfo.name=s.name,n.userInfo.email=s.email,void e.Babble.storage.setItem("babble",JSON.stringify(n))
if("currentMessage"===t)return n.currentMessage=s,void e.Babble.storage.setItem("babble",JSON.stringify(n))
throw new e.Babble.exception("wrong use of updateKey()")},exception:function(e){s.error("[CRITICAL ERROR] Exception thrown: ",e)},run:function(e,t,s){var n=t.Babble
n.updateKey("all",""),n.getStats(n.updateStats),e.querySelector(".Chat-sendMessageForm").addEventListener("submit",function(s){s.preventDefault()
var a=JSON.parse(n.storage.getItem("babble")),o=e.querySelector(".Chat-sendMessageFormText"),r={name:a.userInfo.name,email:a.userInfo.email,message:o.value,timestamp:t.Date.now()}
n.postMessage(r,n.storeId)})
var a=e.querySelector(".Modal")
a.addEventListener("submit",function(e){e.preventDefault(),n.register({name:a.elements[0].value,email:a.elements[1].value}),a.style.display="none",a.style.visibility="hidden",a.setAttribute("aria-hidden","true")}),t.onbeforeunload=function(){var e=JSON.parse(n.storage.getItem("babble")).userInfo
n.request("POST","logout",e).then(function(e){s.log("Answer on POST /logout:",e),n.updateKey("all","")}).catch(function(e){s.log(e)})}}},e.Babble.run(t,e,s)}(this.window,this.document,this.console,this.localStorage,this.XMLHttpRequest,this.Promise,this.navigator)
